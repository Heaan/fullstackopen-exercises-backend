{"version":3,"sources":["components/filter.js","components/person-form.js","components/persons.js","service/person.js","App.js","index.js"],"names":["Filter","handleChange","filter","type","onChange","value","Input","text","required","PersonForm","handleSubmit","handleNameChange","newName","handleNumberChange","newNumber","onSubmit","Person","name","number","id","handleDelete","onClick","Persons","persons","map","person","key","baseUrl","axios","get","then","res","data","post","delete","personUpdate","put","Notification","messageObj","success","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","successMessage","setSuccessMessage","effect","useEffect","personsService","catch","err","console","error","personsToShow","toLowerCase","indexOf","successDone","setTimeout","errorDone","errorData","event","target","preventDefault","isNameExisted","some","confirmStr","window","confirm","find","newPerson","response","status","concat","deleName","delePerson","ReactDOM","render","document","getElementById"],"mappings":"2MAUeA,EARA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAC9B,OACE,uDACyB,2BAAOC,KAAM,OAAQC,SAAUH,EAAcI,MAAOH,MCH3EI,EAAQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMN,EAA0B,EAA1BA,aAAcI,EAAY,EAAZA,MACnC,OACE,6BACGE,EADH,KACU,2BAAOC,UAAU,EAAML,KAAM,OAAQC,SAAUH,EAAcI,MAAOA,MAiBnEI,EAZI,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,aAAcC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,mBAAoBC,EAAgB,EAAhBA,UACjF,OACE,0BAAMC,SAAUL,GACd,kBAAC,EAAD,CAAOH,KAAM,OAAQN,aAAcU,EAAkBN,MAAOO,IAC5D,kBAAC,EAAD,CAAOL,KAAM,SAAUN,aAAcY,EAAoBR,MAAOS,IAChE,6BACE,4BAAQX,KAAK,UAAb,UCdFa,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAIC,EAArB,EAAqBA,aAArB,OACb,6BACGH,EADH,IACUC,EACR,4BAAQD,KAAME,EAAIhB,KAAM,SAAUkB,QAASD,GAA3C,YAYWE,EANC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASH,EAAmB,EAAnBA,aAC1B,OAAOG,EAAQC,KAAI,SAACC,GAAD,OACjB,kBAAC,EAAD,CAAQR,KAAMQ,EAAOR,KAAMC,OAAQO,EAAOP,OAAQQ,IAAKD,EAAOR,KAAME,GAAIM,EAAON,GAAIC,aAAcA,Q,gBCV/FO,EAAU,eAkBD,EAhBA,WACb,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAACC,GAAD,OAASA,EAAIC,SAe/B,EAZA,SAACP,GACd,OAAOG,IAAMK,KAAKN,EAASF,GAAQK,MAAK,SAACC,GAAD,OAASA,EAAIC,SAWxC,EARF,SAACb,GACZ,OAAOS,IAAMM,OAAN,UAAgBP,EAAhB,YAA2BR,IAAMW,MAAK,SAACC,GAAD,OAASA,EAAIC,SAO7C,EAJA,SAACb,EAAIgB,GAClB,OAAOP,IAAMQ,IAAN,UAAaT,EAAb,YAAwBR,GAAMgB,GAAcL,MAAK,SAACC,GAAD,OAASA,EAAIC,SCZjEK,EAAe,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACdC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjB,OAAgB,OAAZA,EACK,KAEF,yBAAKC,UAAWF,EAAU,kBAAoB,iBAAkBC,IAmI1DE,EAhIH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTpB,EADS,KACAqB,EADA,OAEcD,mBAAS,IAFvB,mBAET/B,EAFS,KAEAiC,EAFA,OAGkBF,mBAAS,IAH3B,mBAGT7B,EAHS,KAGEgC,EAHF,OAIYH,mBAAS,IAJrB,mBAITzC,EAJS,KAID6C,EAJC,OAK4BJ,mBAAS,CAAEJ,SAAS,EAAMC,QAAS,OAL/D,mBAKTQ,EALS,KAKOC,EALP,OAMYN,oBAAS,GANrB,mBAMTO,EANS,UAQhBC,qBAAU,WAERC,IAEGtB,MAAK,SAACP,GACLqB,EAAWrB,MAEZ8B,OAAM,SAACC,GACNC,QAAQC,MAAMF,QAEjB,CAACJ,IAEJ,IAAMO,EAAgBlC,EAAQrB,QAAO,SAACuB,GAAD,OAAyE,IAA7DA,EAAOR,KAAKyC,cAAcC,QAAQzD,EAAOwD,kBACpFE,EAAc,SAACrD,EAAMU,GACzBgC,EAAkB,CAAEV,SAAS,EAAMC,QAAQ,GAAD,OAAKjC,EAAL,YAAaU,KACvD4C,YAAW,WACTZ,EAAkB,CAAEV,SAAS,EAAMC,QAAS,SAC3C,MAECsB,EAAY,SAACC,GACjB,IAAMvB,EAA4B,kBAAZuB,EAAP,yBAA+CA,EAA/C,yCAAgGA,EAAUP,MACzHP,EAAkB,CAAEV,SAAS,EAAOC,QAAQA,IAC5CqB,YAAW,WACTZ,EAAkB,CAAEV,SAAS,EAAMC,QAAS,SAC3C,MA6EL,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcF,WAAYU,IAC1B,kBAAC,EAAD,CAAQ/C,aAzBe,SAAC+D,GAC1BjB,EAAUiB,EAAMC,OAAO5D,QAwBqBH,OAAQA,IAClD,yCACA,kBAAC,EAAD,CACEQ,aAjFe,SAACsD,GACpBA,EAAME,iBACN,IAAMzC,EAAS,CACbR,KAAML,EACNM,OAAQJ,GAGJqD,EAAgB5C,EAAQ6C,MAAK,SAAC3C,GAAD,OAAYA,EAAOR,OAASL,KAC/D,GAAKuD,EAAL,CAgBA,IAAME,EAAU,UAAMzD,EAAN,0EAChB,GAAIuD,GAAiBG,OAAOC,QAAQF,GAApC,CACE,IAAMlD,EAAKI,EAAQiD,MAAK,SAAC/C,GAAD,OAAYA,EAAOR,OAASL,KAASO,GAC7DiC,EACUjC,EAAIM,GACXK,MAAK,SAAC2C,GACL7B,EAAWrB,EAAQC,KAAI,SAACC,GAAD,OAAaA,EAAON,KAAOA,EAAKsD,EAAYhD,SAEpEK,MAAK,WACJ8B,EAAY,UAAWhD,GACvBiC,EAAW,IACXC,EAAa,OAEdO,OAAM,SAACC,GACsB,MAAxBA,EAAIoB,SAASC,OACfb,EAAUlD,GACuB,MAAxB0C,EAAIoB,SAASC,QACtBb,EAAUR,EAAIoB,SAAS1C,oBAhC7BoB,EACU3B,GACPK,MAAK,SAAC2C,GACL7B,EAAWrB,EAAQqD,OAAOH,OAE3B3C,MAAK,WACJ8B,EAAY,QAAShD,GACrBiC,EAAW,IACXC,EAAa,OAEdO,OAAM,SAACC,GACNQ,EAAUR,EAAIoB,SAAS1C,UA8DzBrB,iBAnCmB,SAACqD,GACxBnB,EAAWmB,EAAMC,OAAO5D,QAmCpBO,QAASA,EACTC,mBAlCqB,SAACmD,GAC1BlB,EAAakB,EAAMC,OAAO5D,QAkCtBS,UAAWA,IAEb,uCACA,kBAAC,EAAD,CAASS,QAASkC,EAAerC,aAhChB,SAAC4C,GACpB,IAAM7C,EAAK6C,EAAMC,OAAOhD,KAClB4D,EAAWtD,EAAQiD,MAAK,SAAC/C,GAAD,OAAYA,EAAON,KAAOA,KAAIF,KACxDqD,OAAOC,QAAP,iBAAyBM,EAAzB,QACFzB,EACQjC,GACLW,MAAK,SAACgD,GACLlC,EAAWrB,EAAQrB,QAAO,SAACuB,GAAD,OAAYA,EAAON,KAAOA,SAErDW,MAAK,WACJ8B,EAAY,UAAWiB,MAExBxB,OAAM,SAACC,GACNQ,EAAUe,W,MCjHpBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5418a958.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <div>\n      filter shown with name <input type={'text'} onChange={handleChange} value={filter} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Input = ({ text, handleChange, value }) => {\n  return (\n    <div>\n      {text}: <input required={true} type={'text'} onChange={handleChange} value={value} />\n    </div>\n  );\n};\n\nconst PersonForm = ({ handleSubmit, handleNameChange, newName, handleNumberChange, newNumber }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input text={'name'} handleChange={handleNameChange} value={newName} />\n      <Input text={'number'} handleChange={handleNumberChange} value={newNumber} />\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Person = ({ name, number, id, handleDelete }) => (\n  <div>\n    {name} {number}\n    <button name={id} type={'button'} onClick={handleDelete}>\n      Delete\n    </button>\n  </div>\n);\n\nconst Persons = ({ persons, handleDelete }) => {\n  return persons.map((person) => (\n    <Person name={person.name} number={person.number} key={person.name} id={person.id} handleDelete={handleDelete} />\n  ));\n};\n\nexport default Persons;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3001/api/persons';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((res) => res.data);\n};\n\nconst create = (person) => {\n  return axios.post(baseUrl, person).then((res) => res.data);\n};\n\nconst dele = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((res) => res.data);\n};\n\nconst update = (id, personUpdate) => {\n  return axios.put(`${baseUrl}/${id}`, personUpdate).then((res) => res.data);\n};\n\nexport default { getAll, create, dele, update };\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/filter';\nimport PersonForm from './components/person-form';\nimport Persons from './components/persons';\nimport personsService from './service/person';\n\nconst Notification = ({ messageObj }) => {\n  const { success, message } = messageObj;\n  if (message === null) {\n    return null;\n  }\n  return <div className={success ? 'success message' : 'error message'}>{message}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [successMessage, setSuccessMessage] = useState({ success: true, message: null });\n  const [effect, setEffect] = useState(true);\n\n  useEffect(() => {\n    // console.log('effect!');\n    personsService\n      .getAll()\n      .then((persons) => {\n        setPersons(persons);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [effect]);\n\n  const personsToShow = persons.filter((person) => person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\n  const successDone = (text, name) => {\n    setSuccessMessage({ success: true, message: `${text} ${name}` });\n    setTimeout(() => {\n      setSuccessMessage({ success: true, message: null });\n    }, 5000);\n  };\n  const errorDone = (errorData) => {\n    const message= typeof errorData==='string'? `Information of ${errorData} has already been removed from server`:errorData.error\n    setSuccessMessage({ success: false, message:message });\n    setTimeout(() => {\n      setSuccessMessage({ success: true, message: null });\n    }, 5000);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const person = {\n      name: newName,\n      number: newNumber,\n    };\n    // setEffect(!effect);\n    const isNameExisted = persons.some((person) => person.name === newName);\n    if (!isNameExisted) {\n      personsService\n        .create(person)\n        .then((newPerson) => {\n          setPersons(persons.concat(newPerson));\n        })\n        .then(() => {\n          successDone('Added', newName);\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch((err) => {\n          errorDone(err.response.data)\n        });\n      return;\n    }\n    const confirmStr = `${newName} is already added to phonebook, replace the old number with a new one?`;\n    if (isNameExisted && window.confirm(confirmStr)) {\n      const id = persons.find((person) => person.name === newName).id;\n      personsService\n        .update(id, person)\n        .then((newPerson) => {\n          setPersons(persons.map((person) => (person.id === id ? newPerson : person)));\n        })\n        .then(() => {\n          successDone('Updated', newName);\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch((err) => {\n          if (err.response.status === 404) {\n            errorDone(newName);\n          } else if (err.response.status === 400) {\n            errorDone(err.response.data)\n          }\n        });\n      return;\n    }\n  };\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const handleDelete = (event) => {\n    const id = event.target.name;\n    const deleName = persons.find((person) => person.id === id).name;\n    if (window.confirm(`Delete ${deleName} ?`)) {\n      personsService\n        .dele(id)\n        .then((delePerson) => {\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .then(() => {\n          successDone('Deleted', deleName);\n        })\n        .catch((err) => {\n          errorDone(deleName);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification messageObj={successMessage} />\n      <Filter handleChange={handleFilterChange} filter={filter} />\n      <h3>Add a new</h3>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        handleNameChange={handleNameChange}\n        newName={newName}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}